name: Deploy AWS Lambda Function ZIP to S3

on:
  push:
    branches:
      - main
    paths:
      - python/Lambda/**


jobs:
  deploy-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Package and upload modified Lambda files
        run: |
          FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^python/Lambda/.*\.py' || true)
          echo "Detected Lambda files:"
          echo "$FILES"
          mkdir -p zipped
          for file in $FILES; do
            name=$(basename "$file" .py)
            temp_dir=$(mktemp -d)
            cp "$file" "$temp_dir/lambda_handler.py"
            zip -j "zipped/${name}.zip" "$temp_dir/lambda_handler.py"
            timestamp=$(date -u +"%Y%m%dT%H%M%SZ")
            # Upload latest version
            aws s3 cp "zipped/${name}.zip" s3://bloom-dev-data-scripts/lambda/${name}.zip
            # Upload archived version
            aws s3 cp "zipped/${name}.zip" s3://bloom-dev-data-scripts/archive/lambda/${name}_${timestamp}.zip

          done

      - name: Teams Notification on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" -d '{
            "text": "Lambda deployment succeeded in *${{ github.repository }}*. Modified files have been zipped and uploaded to S3.\n\nModified files:\n'"$FILES"'"
          }' ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Teams Notification on Failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" -d '{
            "text": "Lambda deployment failed in *${{ github.repository }}*. Please check the logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }' ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Append deployment log to S3
        if: success()
        run: |
          set -e
      
          BUCKET="bloom-dev-data-scripts"
          LOG_KEY="deployment-logs/deploy_log.jsonl"
          TEMP_LOG="full_log.jsonl"
          NEW_ENTRY="new_entry.json"
      
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          ACTOR="${{ github.actor }}"
          TYPE="lambda"
      
          FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^python/${TYPE^}/.*\.py" || true)
      
          S3_TARGETS=""
          for file in $FILES; do
            name=$(basename "$file" .py)
            S3_TARGETS+="\"s3://$BUCKET/lambda/${name}.zip\","
          done
          S3_TARGETS=${S3_TARGETS%,}
      
          FILE_ARRAY=$(echo $FILES | sed 's/ /", "/g' | sed 's/^/"/;s/$/"/')
      
          cat <<EOF > $NEW_ENTRY
          {
            "timestamp": "$TIMESTAMP",
            "type": "$TYPE",
            "actor": "$ACTOR",
            "files": [ $FILE_ARRAY ],
            "s3_targets": [ $S3_TARGETS ],
            "status": "success",
            "run_url": "$RUN_URL"
          }
          EOF
      
          # Download existing log or create a new one
          aws s3 cp s3://$BUCKET/$LOG_KEY $TEMP_LOG || touch $TEMP_LOG
      
          # Append new entry
          cat $NEW_ENTRY >> $TEMP_LOG
          echo "" >> $TEMP_LOG
      
          # Upload full log back to S3
          aws s3 cp $TEMP_LOG s3://$BUCKET/$LOG_KEY
